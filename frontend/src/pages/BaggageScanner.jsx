import React, { useState } from 'react';
import axios from 'axios';
import './BaggageScanner.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏

const allowedItems = ['–æ–¥–µ–∂–¥–∞', '–∫–Ω–∏–≥–∏', '–∑—É–±–Ω–∞—è —â—ë—Ç–∫–∞', '–Ω–∞—É—à–Ω–∏–∫–∏', '–Ω–æ—É—Ç–±—É–∫', '–±—É—Ç—ã–ª–∫–∞ –≤–æ–¥—ã', '–≤–∏–ª–∫–∞', '–ø–∞—É—ç—Ä–±–∞–Ω–∫', '–ø–ª–µ–¥'];
const forbiddenItems = ['–Ω–æ–∂', '–ø–∏—Å—Ç–æ–ª–µ—Ç', '–≤–∑—Ä—ã–≤—á–∞—Ç–∫–∞'];

function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

function getRandomBaggage() {
  const items = [...allowedItems];
  shuffle(items);
  let selected = items.slice(0, Math.floor(Math.random() * 4) + 2);
  if (Math.random() < 0.1) {
    const forbidden = forbiddenItems[Math.floor(Math.random() * forbiddenItems.length)];
    selected.splice(Math.floor(Math.random() * selected.length), 0, forbidden);
  }
  return selected.join(', ');
}

export default function BaggageScanner() {
  const [result, setResult] = useState('');
  const [baggage, setBaggage] = useState('');
  const [history, setHistory] = useState([]);

  const handleScan = async () => {
    const generated = getRandomBaggage();
    setBaggage(generated);
    try {
      const res = await axios.post('/api/scan_baggage', {
        contents: generated,
      });
      setResult(res.data.result);
      const newEntry = {
        contents: generated,
        result: res.data.result,
        incident: res.data.incident,
        timestamp: new Date().toLocaleTimeString(),
      };
      setHistory(prev => [newEntry, ...prev.slice(0, 4)]);
    } catch (err) {
      console.error(err);
      setResult('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–∞–≥–∞–∂–∞');
    }
  };

  return (
    <div className="baggage-scanner">
      <h2>üì¶ –°–∫–∞–Ω–µ—Ä –±–∞–≥–∞–∂–∞</h2>
      <button onClick={handleScan}>–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å</button>

      {result && (
        <p className={result.includes('–û–±–Ω–∞—Ä—É–∂–µ–Ω') ? 'alert-text' : 'ok-text'}>
          <strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong> {result}
        </p>
      )}

      <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
      <ul className="scan-log">
        {history.map((item, idx) => (
          <li key={idx} className={item.incident ? 'alert' : 'ok'}>
            <strong>[{item.timestamp}]</strong> {item.contents} ‚Üí {item.result}
          </li>
        ))}
      </ul>
    </div>
  );
}
